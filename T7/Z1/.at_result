{
    "buildhost_description": {
        "id": "localhost",
        "os": "Linux 4.15.0-171-generic x86_64\nUbuntu 18.04.6 LTS\n"
    },
    "tools": {
        "compile": "7.5.0",
        "compile[debug]": "7.5.0",
        "debug": "8.1.1",
        "profile[memcheck]": "valgrind-3.13.0",
        "profile[sgcheck]": "valgrind-3.13.0"
    },
    "status": 4,
    "test_results": {
        "715": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "*******",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==5325== Memcheck, a memory error detector\n==5325== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==5325== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5325== Command: output5AOh7b\n==5325==\n====START_TEST_5197====*******====END_TEST_5197======5325==\n==5325== HEAP SUMMARY:\n==5325==     in use at exit: 0 bytes in 0 blocks\n==5325==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated\n==5325==\n==5325== All heap blocks were freed -- no leaks are possible\n==5325==\n==5325== For counts of detected and suppressed errors, rerun with: -v\n==5325== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==5349== exp-sgcheck, a stack and global array overrun detector\n==5349== NOTE: This is an Experimental-Class Valgrind Tool\n==5349== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==5349== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5349== Command: output5AOh7b\n==5349==\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5349-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==5349==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5349==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5349==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5349==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5349==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5349==    by 0x10032A7DBE: ???\n==5349==    by 0x1002E8DF2F: ???\n==5349==    by 0x1C0F: ???\n==5349==    by 0x10020644FF: ???\n==5349==    by 0x1002E8DF17: ???\n==5349==    by 0x1002E8DF2F: ???\n==5349==    by 0x5841F21F: ???\n==5349==    by 0x600: ???\n==5349==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 5349)\n==5349==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==5349==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==5349==    by 0x4001304: map_doit (rtld.c:591)\n==5349==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==5349==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==5349==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==5349==    by 0x4003E54: dl_main (rtld.c:1618)\n==5349==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==5349==    by 0x4002127: _dl_start (rtld.c:414)\n==5349==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "716": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "-\n-",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==5367== Memcheck, a memory error detector\n==5367== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==5367== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5367== Command: output77pI8c\n==5367==\n====START_TEST_2316====-\n-====END_TEST_2316======5367==\n==5367== HEAP SUMMARY:\n==5367==     in use at exit: 0 bytes in 0 blocks\n==5367==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated\n==5367==\n==5367== All heap blocks were freed -- no leaks are possible\n==5367==\n==5367== For counts of detected and suppressed errors, rerun with: -v\n==5367== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==5386== exp-sgcheck, a stack and global array overrun detector\n==5386== NOTE: This is an Experimental-Class Valgrind Tool\n==5386== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==5386== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5386== Command: output77pI8c\n==5386==\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5386-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==5386==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5386==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5386==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5386==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5386==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5386==    by 0x10032A7DBE: ???\n==5386==    by 0x1002E8DF2F: ???\n==5386==    by 0x1C0F: ???\n==5386==    by 0x10020644FF: ???\n==5386==    by 0x1002E8DF17: ???\n==5386==    by 0x1002E8DF2F: ???\n==5386==    by 0x5841F21F: ???\n==5386==    by 0x600: ???\n==5386==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 5386)\n==5386==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==5386==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==5386==    by 0x4001304: map_doit (rtld.c:591)\n==5386==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==5386==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==5386==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==5386==    by 0x4003E54: dl_main (rtld.c:1618)\n==5386==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==5386==    by 0x4002127: _dl_start (rtld.c:414)\n==5386==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "717": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "**********\n*\n*\n*******\n*\n*\n**********",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==5443== Memcheck, a memory error detector\n==5443== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==5443== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5443== Command: outputLMFHRg\n==5443==\n====START_TEST_2869====**********\n*\n*\n*******\n*\n*\n**********\n====END_TEST_2869======5443==\n==5443== HEAP SUMMARY:\n==5443==     in use at exit: 0 bytes in 0 blocks\n==5443==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated\n==5443==\n==5443== All heap blocks were freed -- no leaks are possible\n==5443==\n==5443== For counts of detected and suppressed errors, rerun with: -v\n==5443== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==5461== exp-sgcheck, a stack and global array overrun detector\n==5461== NOTE: This is an Experimental-Class Valgrind Tool\n==5461== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==5461== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5461== Command: outputLMFHRg\n==5461==\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5461-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==5461==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5461==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5461==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5461==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5461==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5461==    by 0x10032A7DBE: ???\n==5461==    by 0x1002E8DF2F: ???\n==5461==    by 0x1C0F: ???\n==5461==    by 0x10020644FF: ???\n==5461==    by 0x1002E8DF17: ???\n==5461==    by 0x1002E8DF2F: ???\n==5461==    by 0x5841F21F: ???\n==5461==    by 0x600: ???\n==5461==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 5461)\n==5461==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==5461==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==5461==    by 0x4001304: map_doit (rtld.c:591)\n==5461==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==5461==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==5461==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==5461==    by 0x4003E54: dl_main (rtld.c:1618)\n==5461==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==5461==    by 0x4002127: _dl_start (rtld.c:414)\n==5461==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "718": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "-*-",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==5484== Memcheck, a memory error detector\n==5484== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==5484== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5484== Command: outputVt21gn\n==5484==\n====START_TEST_4905====-*-====END_TEST_4905======5484==\n==5484== HEAP SUMMARY:\n==5484==     in use at exit: 0 bytes in 0 blocks\n==5484==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated\n==5484==\n==5484== All heap blocks were freed -- no leaks are possible\n==5484==\n==5484== For counts of detected and suppressed errors, rerun with: -v\n==5484== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==5496== exp-sgcheck, a stack and global array overrun detector\n==5496== NOTE: This is an Experimental-Class Valgrind Tool\n==5496== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==5496== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5496== Command: outputVt21gn\n==5496==\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5496-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==5496==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5496==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5496==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5496==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5496==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5496==    by 0x10032A7DBE: ???\n==5496==    by 0x1002E8DF2F: ???\n==5496==    by 0x1C0F: ???\n==5496==    by 0x10020644FF: ???\n==5496==    by 0x1002E8DF17: ???\n==5496==    by 0x1002E8DF2F: ???\n==5496==    by 0x5841F21F: ???\n==5496==    by 0x600: ???\n==5496==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 5496)\n==5496==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==5496==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==5496==    by 0x4001304: map_doit (rtld.c:591)\n==5496==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==5496==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==5496==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==5496==    by 0x4003E54: dl_main (rtld.c:1618)\n==5496==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==5496==    by 0x4002127: _dl_start (rtld.c:414)\n==5496==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "719": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "--",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==5535== Memcheck, a memory error detector\n==5535== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==5535== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5535== Command: outputTE9zow\n==5535==\n====START_TEST_8655====--====END_TEST_8655======5535==\n==5535== HEAP SUMMARY:\n==5535==     in use at exit: 0 bytes in 0 blocks\n==5535==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated\n==5535==\n==5535== All heap blocks were freed -- no leaks are possible\n==5535==\n==5535== For counts of detected and suppressed errors, rerun with: -v\n==5535== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==5546== exp-sgcheck, a stack and global array overrun detector\n==5546== NOTE: This is an Experimental-Class Valgrind Tool\n==5546== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==5546== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==5546== Command: outputTE9zow\n==5546==\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--5546-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==5546==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5546==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5546==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5546==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5546==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==5546==    by 0x10032A7DBE: ???\n==5546==    by 0x1002E8DF2F: ???\n==5546==    by 0x1C0F: ???\n==5546==    by 0x10020644FF: ???\n==5546==    by 0x1002E8DF17: ???\n==5546==    by 0x1002E8DF2F: ???\n==5546==    by 0x5841F21F: ???\n==5546==    by 0x600: ???\n==5546==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 5546)\n==5546==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==5546==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==5546==    by 0x4001304: map_doit (rtld.c:591)\n==5546==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==5546==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==5546==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==5546==    by 0x4003E54: dl_main (rtld.c:1618)\n==5546==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==5546==    by 0x4002127: _dl_start (rtld.c:414)\n==5546==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    },
    "time": 1660853186
}