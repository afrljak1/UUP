{
    "buildhost_description": {
        "id": "lab002-c28",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n"
    },
    "tools": {
        "compile": "gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)",
        "compile[debug]": "gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)",
        "debug": "GNU gdb (GDB) Red Hat Enterprise Linux (7.2-92.el6)",
        "profile[memcheck]": "valgrind-3.8.1",
        "profile[sgcheck]": "valgrind-3.8.1"
    },
    "status": 4,
    "test_results": {
        "920": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "o tome",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==386== Memcheck, a memory error detector\n==386== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==386== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==386== Command: outputLC17U7\n==386==\n====START_TEST_7160====   o tome====END_TEST_7160======386==\n==386== HEAP SUMMARY:\n==386==     in use at exit: 0 bytes in 0 blocks\n==386==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==386==\n==386== All heap blocks were freed -- no leaks are possible\n==386==\n==386== For counts of detected and suppressed errors, rerun with: -v\n==386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==390== exp-sgcheck, a stack and global array overrun detector\n==390== NOTE: This is an Experimental-Class Valgrind Tool\n==390== Copyright (C) 2003-2012, and GNU GPL'd, by OpenWorks Ltd et al.\n==390== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==390== Command: outputLC17U7\n==390==\n====START_TEST_7160====   o tome====END_TEST_7160======390==\n==390== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "921": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "toliko     o",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==406== Memcheck, a memory error detector\n==406== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==406== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==406== Command: outputGraVC5\n==406==\n====START_TEST_6354====  toliko     o    ====END_TEST_6354======406==\n==406== HEAP SUMMARY:\n==406==     in use at exit: 0 bytes in 0 blocks\n==406==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==406==\n==406== All heap blocks were freed -- no leaks are possible\n==406==\n==406== For counts of detected and suppressed errors, rerun with: -v\n==406== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==410== exp-sgcheck, a stack and global array overrun detector\n==410== NOTE: This is an Experimental-Class Valgrind Tool\n==410== Copyright (C) 2003-2012, and GNU GPL'd, by OpenWorks Ltd et al.\n==410== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==410== Command: outputGraVC5\n==410==\n====START_TEST_6354====  toliko     o    ====END_TEST_6354======410==\n==410== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "922": {
            "success": false,
            "status": 6,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "1abc!@#$%DEF![/]!gHe+`_^*iJK.{|},lmn!   opQ!",
                    "duration": 0,
                    "status": 6,
                    "exit_code": 0,
                    "success": false
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==428== Memcheck, a memory error detector\n==428== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==428== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==428== Command: outputUABv47\n==428==\n====START_TEST_7813====1abc!@#$%DEF![/]!gHe+`_^*iJK.{|},lmn!   opQ!====END_TEST_7813======428==\n==428== HEAP SUMMARY:\n==428==     in use at exit: 0 bytes in 0 blocks\n==428==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==428==\n==428== All heap blocks were freed -- no leaks are possible\n==428==\n==428== For counts of detected and suppressed errors, rerun with: -v\n==428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==432== exp-sgcheck, a stack and global array overrun detector\n==432== NOTE: This is an Experimental-Class Valgrind Tool\n==432== Copyright (C) 2003-2012, and GNU GPL'd, by OpenWorks Ltd et al.\n==432== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==432== Command: outputUABv47\n==432==\n====START_TEST_7813====1abc!@#$%DEF![/]!gHe+`_^*iJK.{|},lmn!   opQ!====END_TEST_7813======432==\n==432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "923": {
            "success": false,
            "status": 6,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "u zenicu auto-stopom podjem ja",
                    "duration": 0,
                    "status": 6,
                    "exit_code": 0,
                    "success": false
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==449== Memcheck, a memory error detector\n==449== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==449== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==449== Command: outputRtYNff\n==449==\n====START_TEST_7260====u zenicu auto-stopom podjem ja====END_TEST_7260======449==\n==449== HEAP SUMMARY:\n==449==     in use at exit: 0 bytes in 0 blocks\n==449==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==449==\n==449== All heap blocks were freed -- no leaks are possible\n==449==\n==449== For counts of detected and suppressed errors, rerun with: -v\n==449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==453== exp-sgcheck, a stack and global array overrun detector\n==453== NOTE: This is an Experimental-Class Valgrind Tool\n==453== Copyright (C) 2003-2012, and GNU GPL'd, by OpenWorks Ltd et al.\n==453== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==453== Command: outputRtYNff\n==453==\n====START_TEST_7260====u zenicu auto-stopom podjem ja====END_TEST_7260======453==\n==453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "924": {
            "success": false,
            "status": 5,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "",
                    "duration": 0,
                    "status": 3,
                    "exit_code": 139,
                    "core": "/tmp/autotester/bs_3493/core.465",
                    "success": false
                },
                "debug": {
                    "status": 3,
                    "duration": 0,
                    "output": "[New Thread 465]\nCore was generated by `outputBqcGbr'.\nProgram terminated with signal 11, Segmentation fault.\n#0  0x0000003b4b817e22 in strcmp () from /lib64/ld-linux-x86-64.so.2\n#0  0x0000003b4b817e22 in strcmp () from /lib64/ld-linux-x86-64.so.2\n#1  0x0000003b4b80f2b5 in _dl_name_match_p () from /lib64/ld-linux-x86-64.so.2\n#2  0x0000003b4b809c05 in do_lookup_x () from /lib64/ld-linux-x86-64.so.2\n#3  0x0000003b4b80a26a in _dl_lookup_symbol_x () from /lib64/ld-linux-x86-64.so.2\n#4  0x0000003b4b80e420 in _dl_fixup () from /lib64/ld-linux-x86-64.so.2\n#5  0x0000003b4b814c55 in _dl_runtime_resolve () from /lib64/ld-linux-x86-64.so.2\n#6  0x0000000000400718 in main () at main.c:42",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "file": "TEST_CODE",
                            "line": 4
                        }
                    ]
                },
                "profile[memcheck]": {
                    "status": 3,
                    "duration": 2,
                    "output": "==477== Memcheck, a memory error detector\n==477== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==477== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==477== Command: outputBqcGbr\n==477==\n==477== Use of uninitialised value of size 8\n==477==    at 0x400685: izbaci_rijec (main.c:26)\n==477==    by 0x40070F: main (main.c:42)\n==477==\n==477== Use of uninitialised value of size 8\n==477==    at 0x40068B: izbaci_rijec (main.c:26)\n==477==    by 0x40070F: main (main.c:42)\n==477==\n==477== Invalid read of size 1\n==477==    at 0x4A08573: strcmp (mc_replace_strmem.c:731)\n==477==    by 0x3B4B80F2B4: _dl_name_match_p (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B809C04: do_lookup_x (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B80A269: _dl_lookup_symbol_x (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B80E41F: _dl_fixup (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B814C54: _dl_runtime_resolve (in /lib64/ld-2.12.so)\n==477==    by 0x400717: main (main.c:42)\n==477==  Address 0x61626f72 is not stack'd, malloc'd or (recently) free'd\n==477==\n==477==\n==477== Process terminating with default action of signal 11 (SIGSEGV): dumping core\n==477==  Access not within mapped region at address 0x61626F72\n==477==    at 0x4A08573: strcmp (mc_replace_strmem.c:731)\n==477==    by 0x3B4B80F2B4: _dl_name_match_p (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B809C04: do_lookup_x (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B80A269: _dl_lookup_symbol_x (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B80E41F: _dl_fixup (in /lib64/ld-2.12.so)\n==477==    by 0x3B4B814C54: _dl_runtime_resolve (in /lib64/ld-2.12.so)\n==477==    by 0x400717: main (main.c:42)\n==477==  If you believe this happened as a result of a stack\n==477==  overflow in your program's main thread (unlikely but\n==477==  possible), you can try to increase the size of the\n==477==  main thread stack using the --main-stacksize= flag.\n==477==  The main thread stack size used in this run was 10485760.\n====START_TEST_3493======477==\n==477== HEAP SUMMARY:\n==477==     in use at exit: 0 bytes in 0 blocks\n==477==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==477==\n==477== All heap blocks were freed -- no leaks are possible\n==477==\n==477== For counts of detected and suppressed errors, rerun with: -v\n==477== Use --track-origins=yes to see where uninitialised values come from\n==477== ERROR SUMMARY: 27 errors from 3 contexts (suppressed: 8 from 6)",
                    "exit_code": 139,
                    "success": false,
                    "parsed_output": [
                        {
                            "type": 3,
                            "output": " Use of uninitialised value of size 8\n    at 0x400685: izbaci_rijec (main.c:26)\n    by 0x40070F: main (main.c:42)\n",
                            "file": "main.c",
                            "line": 26
                        },
                        {
                            "type": 2,
                            "output": " Invalid read of size 1\n    at 0x4A08573: strcmp (mc_replace_strmem.c:731)\n    by 0x3B4B80F2B4: _dl_name_match_p (in /lib64/ld-2.12.so)\n    by 0x3B4B809C04: do_lookup_x (in /lib64/ld-2.12.so)\n    by 0x3B4B80A269: _dl_lookup_symbol_x (in /lib64/ld-2.12.so)\n    by 0x3B4B80E41F: _dl_fixup (in /lib64/ld-2.12.so)\n    by 0x3B4B814C54: _dl_runtime_resolve (in /lib64/ld-2.12.so)\n    by 0x400717: main (main.c:42)\n  Address 0x61626f72 is not stack'd, malloc'd or (recently) free'd\n",
                            "file": "TEST_CODE",
                            "line": 4
                        }
                    ]
                }
            }
        },
        "1718": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "toliko     o   da",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==496== Memcheck, a memory error detector\n==496== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==496== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==496== Command: output7kHycJ\n==496==\n====START_TEST_8132====  toliko     o   da====END_TEST_8132======496==\n==496== HEAP SUMMARY:\n==496==     in use at exit: 0 bytes in 0 blocks\n==496==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==496==\n==496== All heap blocks were freed -- no leaks are possible\n==496==\n==496== For counts of detected and suppressed errors, rerun with: -v\n==496== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==500== exp-sgcheck, a stack and global array overrun detector\n==500== NOTE: This is an Experimental-Class Valgrind Tool\n==500== Copyright (C) 2003-2012, and GNU GPL'd, by OpenWorks Ltd et al.\n==500== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==500== Command: output7kHycJ\n==500==\n====START_TEST_8132====  toliko     o   da====END_TEST_8132======500==\n==500== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    },
    "time": 1640619802
}