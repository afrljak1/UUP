{
    "id": 7208,
    "name": "Osnove ra\u010dunarstva (2016\/2017), Tutorijal 13, zadatak 2",
    "languages": [
        "C"
    ],
    "tools": {
        "compile": {
            "require": "gcc",
            "features": [
                "optimize",
                "warn",
                "pedantic"
            ]
        },
        "compile[debug]": {
            "require": "gcc",
            "features": [
                "debug"
            ]
        },
        "execute": {
            "environment": {
                "timeout": 10,
                "memory": 1000000
            }
        },
        "debug": [],
        "profile[memcheck]": {
            "require": "valgrind",
            "features": [
                "memcheck"
            ],
            "environment": {
                "timeout": 10
            }
        },
        "profile[sgcheck]": {
            "require": "valgrind",
            "features": [
                "sgcheck"
            ],
            "environment": {
                "timeout": 10
            }
        }
    },
    "tests": [
        {
            "compile": [],
            "options": [
                "silent",
                "terminate"
            ]
        },
        {
            "id": 2055,
            "patch": [
                {
                    "position": "main",
                    "code": "FILE* dat = fopen(\"ispit.txt\", \"w\");\nfputs(\"Anic           Ana        7 15\\nMarkovic       Marko     11 14\\nIvic           Ivica     20 9\\nMajic          Maja      12 12\\nIsovic         Ismet      5 0\\nMuharemovic    Muharem    7 8\\nAlmirovic      Almir     10 10\\nZdravkovic     Zdravko    8 19\\nRadic          Rade      19 19\\nDanilovic      Danilo    12 10\\n\", dat);\nfclose(dat);\n_main();\n\n\/* Ispisujemo na ekran generisane datoteke *\/\nprintf(\"usmeni.txt:\\n\");\ndat = fopen(\"usmeni.txt\", \"r\");\nif (dat == NULL) {\n    printf(\"Datoteka ne postoji!\");\n    return 0;\n}\nint c;\ndo {\n   c = fgetc(dat);\n   if (c != EOF) printf(\"%c\", c);\n} while (c != EOF);\nfclose (dat);\n",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Izlazna datoteka usmeni.txt je kreirana\nusmeni.txt:\nRadic          Rade      38\nMarkovic       Marko     25\nMajic          Maja      24\nDanilovic      Danilo    22\nAlmirovic      Almir     20"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 2056,
            "patch": [
                {
                    "position": "main",
                    "code": "\/* Provjera izgleda strukture Student *\/\nstruct Student s;\ns.broj_bodova1 = 15;\ns.broj_bodova2 = 20;\nprintf(\"Sve ok\");",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Sve ok"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 2057,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT3 Greska pri upisu u datoteku, datoteka ne postoji (Ovo je drugi zadatak, ne prvi  )\nFILE* dat = fopen(\"ispit_sortiran.txt\", \"w\");\nfputs(\"Anic           Ana        7 15\\nMarkovic       Marko     11 14\\nIvic           Ivica     20 9\\nMajic          Maja      12 12\\nIsovic         Ismet      5 0\\nMuharemovic    Muharem    7 8\\nAlmirovic      Almir     10 10\\nZdravkovic     Zdravko    8 19\\nRadic          Rade      19 19\\nDanilovic      Danilo    12 10\\n\", dat);\nfclose(dat);\n\n\/\/ Brisemo ispit.txt koja je ostala\nremove(\"ispit.txt\");\nremove(\"usmeni.txt\");\n\n_main();\n\n\/* Ispisujemo na ekran generisane datoteke *\/\nprintf(\"usmeni.txt:\\n\");\ndat = fopen(\"usmeni.txt\", \"r\");\nif (dat == NULL) {\n    printf(\"Datoteka ne postoji!\");\n} else {\n    int c, bilo = 0;\n    do {\n      c = fgetc(dat);\n      if (c != EOF) { printf(\"%c\", c); bilo = 1; }\n    } while (c != EOF);\n    if (bilo == 0) printf(\"Unesite bar jednog studenta u datoteku ispit.txt...\");\n    fclose (dat);\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Greska pri otvaranju datoteke ispit.txt\nusmeni.txt:\nDatoteka ne postoji!",
                    "Greska pri otvaranju datoteke ispit.txtusmeni.txt:\nDatoteka ne postoji!"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 2058,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT4 Prazna datoteka.\n    FILE* dat = fopen(\"ispit.txt\", \"w\");\n    fputs(\"\", dat);\n    fclose(dat);\n    _main();\n    \n    \/* Ispisujemo na ekran generisane datoteke *\/\n    printf(\"usmeni.txt:\\n\");\n    dat = fopen(\"usmeni.txt\", \"r\");\n    if (dat == NULL) {\n        printf(\"Datoteka ne postoji!\");\n        return 0;\n    }\n    int c, bilo = 0;\n    do {\n      c = fgetc(dat);\n      if (c != EOF) { printf(\"%c\", c); bilo = 1;}\n    } while (c != EOF);\n    if (bilo == 0) printf(\"Unesite bar jednog studenta u datoteku ispit.txt...\");\n    fclose (dat);",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Izlazna datoteka usmeni.txt je kreirana\nusmeni.txt:\nUnesite bar jednog studenta u datoteku ispit.txt..."
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 2059,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT5 Niko nije polozio\n    FILE* dat = fopen(\"ispit.txt\", \"w\");\n    fputs(\"Anic           Ana       7 9\\nMarkovic       Marko     9 9\\nIvic           Ivica     20 1\\nMajic          Maja      1 14\\nIsovic         Ismet     0 0\\n\", dat);\n    fclose(dat);\n    _main();\n    \n    \/* Ispisujemo na ekran generisane datoteke *\/\n    printf(\"usmeni.txt:\\n\");\n    dat = fopen(\"usmeni.txt\", \"r\");\n    if (dat == NULL) {\n        printf(\"Datoteka ne postoji!\");\n        return 0;\n    }\n    int c, bilo=0;\n    do {\n      c = fgetc(dat);\n      if (c != EOF) { printf(\"%c\", c); bilo = 1; }\n    } while (c != EOF);\n    if (bilo == 0) printf(\"Niko nije polozio!!!\");\n    fclose (dat);",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Izlazna datoteka usmeni.txt je kreirana\nusmeni.txt:\nNiko nije polozio!!!"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 2060,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT6 Program se ne smije nikada krahirati...\n    int i;\n    FILE* dat = fopen(\"ispit.txt\", \"w\");\n    for (i=0; i<10000; i++)\n    fputs(\"Neki           Cep       20 20\\n\", dat);\n    fclose(dat);\n    _main();\n    \n    \/* Ispisujemo na ekran generisane datoteke *\/\n    printf(\"usmeni.txt:\\n\");\n    dat = fopen(\"usmeni.txt\", \"r\");\n    if (dat == NULL) {\n        printf(\"Datoteka ne postoji!\");\n        return 0;\n    }\n    int c;\n    do {\n      c = fgetc(dat);\n    } while (c != EOF);\n    fclose (dat);\n    printf (\"Sve ok.\");",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "Sve ok."
                ],
                "matching": "substring"
            },
            "debug": [],
            "profile[memcheck]": {
                "matching": "substring"
            },
            "profile[sgcheck]": {
                "matching": "substring"
            }
        }
    ]
}
