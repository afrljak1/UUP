{
    "buildhost_description": {
        "id": "localhost",
        "os": "Linux 4.15.0-171-generic x86_64\nUbuntu 18.04.6 LTS\n"
    },
    "tools": {
        "compile": "7.5.0",
        "compile[debug]": "7.5.0",
        "debug": "8.1.1",
        "profile[memcheck]": "valgrind-3.13.0",
        "profile[sgcheck]": "valgrind-3.13.0"
    },
    "status": 4,
    "test_results": {
        "1": {
            "success": true,
            "status": 1,
            "tools": {
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "Unesite ime datoteke: Pogreska kod otvaranja datoteke tes.txt!\n\n",
                    "duration": 0,
                    "status": 5,
                    "exit_code": 1,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==8253== Memcheck, a memory error detector\n==8253== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==8253== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8253== Command: outputlYxgB1\n==8253==\nUnesite ime datoteke: Pogreska kod otvaranja datoteke tes.txt!\n\n==8253==\n==8253== HEAP SUMMARY:\n==8253==     in use at exit: 0 bytes in 0 blocks\n==8253==   total heap usage: 3 allocs, 3 frees, 8,744 bytes allocated\n==8253==\n==8253== All heap blocks were freed -- no leaks are possible\n==8253==\n==8253== For counts of detected and suppressed errors, rerun with: -v\n==8253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==8275== exp-sgcheck, a stack and global array overrun detector\n==8275== NOTE: This is an Experimental-Class Valgrind Tool\n==8275== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==8275== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8275== Command: outputlYxgB1\n==8275==\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8275-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==8275==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8275==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8275==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8275==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8275==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8275==    by 0x10032A7DBE: ???\n==8275==    by 0x1002E8DF2F: ???\n==8275==    by 0x1C0F: ???\n==8275==    by 0x10020644FF: ???\n==8275==    by 0x1002E8DF17: ???\n==8275==    by 0x1002E8DF2F: ???\n==8275==    by 0x5841F21F: ???\n==8275==    by 0x600: ???\n==8275==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 8275)\n==8275==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==8275==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==8275==    by 0x4001304: map_doit (rtld.c:591)\n==8275==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==8275==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==8275==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==8275==    by 0x4003E54: dl_main (rtld.c:1618)\n==8275==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==8275==    by 0x4002127: _dl_start (rtld.c:414)\n==8275==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "2": {
            "success": true,
            "status": 1,
            "tools": {
                "execute": {
                    "output": "Unesite ime datoteke: Pogreska kod otvaranja datoteke test!\n\n",
                    "duration": 0,
                    "status": 5,
                    "exit_code": 1,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==8282== Memcheck, a memory error detector\n==8282== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==8282== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8282== Command: outputlYxgB1\n==8282==\nUnesite ime datoteke: Pogreska kod otvaranja datoteke test!\n\n==8282==\n==8282== HEAP SUMMARY:\n==8282==     in use at exit: 0 bytes in 0 blocks\n==8282==   total heap usage: 3 allocs, 3 frees, 8,744 bytes allocated\n==8282==\n==8282== All heap blocks were freed -- no leaks are possible\n==8282==\n==8282== For counts of detected and suppressed errors, rerun with: -v\n==8282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==8304== exp-sgcheck, a stack and global array overrun detector\n==8304== NOTE: This is an Experimental-Class Valgrind Tool\n==8304== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==8304== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8304== Command: outputlYxgB1\n==8304==\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8304-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==8304==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8304==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8304==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8304==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8304==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8304==    by 0x10032A7DBE: ???\n==8304==    by 0x1002E8DF2F: ???\n==8304==    by 0x1C0F: ???\n==8304==    by 0x10020644FF: ???\n==8304==    by 0x1002E8DF17: ???\n==8304==    by 0x1002E8DF2F: ???\n==8304==    by 0x5841F21F: ???\n==8304==    by 0x600: ???\n==8304==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 8304)\n==8304==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==8304==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==8304==    by 0x4001304: map_doit (rtld.c:591)\n==8304==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==8304==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==8304==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==8304==    by 0x4003E54: dl_main (rtld.c:1618)\n==8304==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==8304==    by 0x4002127: _dl_start (rtld.c:414)\n==8304==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "output": "Unesite ime datoteke: Broj redova: 2\nBroj rijeci: 7\nBroj znakova: 31",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 0,
                    "output": "==8323== Memcheck, a memory error detector\n==8323== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==8323== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8323== Command: output5hw9Zt\n==8323==\n====START_TEST_315====Unesite ime datoteke: Broj redova: 2\nBroj rijeci: 7\nBroj znakova: 31\n====END_TEST_315======8323==\n==8323== HEAP SUMMARY:\n==8323==     in use at exit: 0 bytes in 0 blocks\n==8323==   total heap usage: 6 allocs, 6 frees, 17,488 bytes allocated\n==8323==\n==8323== All heap blocks were freed -- no leaks are possible\n==8323==\n==8323== For counts of detected and suppressed errors, rerun with: -v\n==8323== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==8341== exp-sgcheck, a stack and global array overrun detector\n==8341== NOTE: This is an Experimental-Class Valgrind Tool\n==8341== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==8341== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==8341== Command: output5hw9Zt\n==8341==\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--8341-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n\nexp-sgcheck: sg_main.c:559 (add_blocks_to_StackTree): Assertion '!already_present' failed.\n\nhost stacktrace:\n==8341==    at 0x5801545A: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8341==    by 0x58015574: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8341==    by 0x580156F9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8341==    by 0x5800A6E9: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8341==    by 0x5800C3B0: ??? (in /usr/lib/valgrind/exp-sgcheck-amd64-linux)\n==8341==    by 0x10032A7DBE: ???\n==8341==    by 0x1002E8DF2F: ???\n==8341==    by 0x1C0F: ???\n==8341==    by 0x10020644FF: ???\n==8341==    by 0x1002E8DF17: ???\n==8341==    by 0x1002E8DF2F: ???\n==8341==    by 0x5841F21F: ???\n==8341==    by 0x600: ???\n==8341==    by 0x18085: ???\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 8341)\n==8341==    at 0x4006EA2: _dl_map_object_from_fd (dl-map-segments.h:94)\n==8341==    by 0x40091AB: _dl_map_object (dl-load.c:2460)\n==8341==    by 0x4001304: map_doit (rtld.c:591)\n==8341==    by 0x401BE4A: _dl_catch_exception (dl-error-skeleton.c:196)\n==8341==    by 0x401BEBE: _dl_catch_error (dl-error-skeleton.c:215)\n==8341==    by 0x4002567: handle_ld_preload (rtld.c:762)\n==8341==    by 0x4003E54: dl_main (rtld.c:1618)\n==8341==    by 0x401AF4F: _dl_sysdep_start (dl-sysdep.c:253)\n==8341==    by 0x4002127: _dl_start (rtld.c:414)\n==8341==    by 0x4001097: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)\n\n\nNote: see also the FAQ in the source distribution.\nIt contains workarounds to several common problems.\nIn particular, if Valgrind aborted or crashed after\nidentifying problems in your program, there's a good chance\nthat fixing those problems will prevent Valgrind aborting or\ncrashing, especially if it happened in m_mallocfree.c.\n\nIf that doesn't help, please report this bug to: www.valgrind.org\n\nIn the bug report, send all the above text, the valgrind\nversion, and what OS and version you are using.  Thanks.\n",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    },
    "time": 1661696347
}